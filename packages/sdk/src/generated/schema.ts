/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/api/v1/accounts/signin": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["Schema"]["signInInputSchema"]
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["signInResponseSchema"]
          }
        }
        /** @description Default Response */
        401: {
          content: {
            "application/json": components["schemas"]["Schema"]["unAuthorizedResponseSchema"]
          }
        }
      }
    }
  }
  "/api/v1/accounts/signup": {
    post: {
      requestBody: {
        content: {
          "application/json": components["schemas"]["Schema"]["signUpInputSchema"]
        }
      }
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": components["schemas"]["Schema"]["signUpResponseSchema"]
          }
        }
        /** @description Default Response */
        401: {
          content: {
            "application/json": components["schemas"]["Schema"]["unAuthorizedResponseSchema"]
          }
        }
      }
    }
  }
  "/api/v1/accounts/self": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["signInResponseSchema"]
          }
        }
        /** @description Default Response */
        404: {
          content: {
            "application/json": components["schemas"]["Schema"]["notFoundResponseSchema"]
          }
        }
      }
    }
  }
  "/api/v1/accounts/signout": {
    post: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["successResponseSchema"]
          }
        }
        /** @description Default Response */
        404: {
          content: {
            "application/json": components["schemas"]["Schema"]["notFoundResponseSchema"]
          }
        }
      }
    }
  }
  "/api/v1/accounts/{id}": {
    get: {
      parameters: {
        path: {
          id: string
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["getAccountByIdResponseSchema"]
          }
        }
        /** @description Default Response */
        404: {
          content: {
            "application/json": components["schemas"]["Schema"]["notFoundResponseSchema"]
          }
        }
      }
    }
    put: {
      parameters: {
        path: {
          id: string
        }
      }
      requestBody: {
        content: {
          "application/json": components["schemas"]["Schema"]["updateAccountByIdInputSchema"]
        }
      }
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": components["schemas"]["Schema"]["updateAccountByIdResponseSchema"]
          }
        }
        /** @description Default Response */
        404: {
          content: {
            "application/json": components["schemas"]["Schema"]["notFoundResponseSchema"]
          }
        }
      }
    }
    delete: {
      parameters: {
        path: {
          id: string
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["deleteAccountByIdResponseSchema"]
          }
        }
        /** @description Default Response */
        404: {
          content: {
            "application/json": components["schemas"]["Schema"]["notFoundResponseSchema"]
          }
        }
      }
    }
  }
  "/api/v1/accounts": {
    get: {
      parameters: {
        query: {
          id?: string
          email?: string
        }
      }
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": components["schemas"]["Schema"]["getAccountByIdResponseSchema"]
          }
        }
        /** @description Default Response */
        404: {
          content: {
            "application/json": components["schemas"]["Schema"]["notFoundResponseSchema"]
          }
        }
      }
    }
  }
  "/api/v1/messages/": {
    get: {
      responses: {
        /** @description Default Response */
        200: never
      }
    }
  }
  "/api/v1/health-check/": {
    get: {
      responses: {
        /** @description Default Response */
        200: never
      }
    }
  }
}

export type webhooks = Record<string, never>

export interface components {
  schemas: {
    Schema: {
      signInInputSchema: {
        /** Format: email */
        email: string
        password: string
      }
      signInResponseSchema: {
        /** Format: uuid */
        id: string
        email: components["schemas"]["Schema"]["signInInputSchema"]["email"]
      }
      signUpInputSchema: components["schemas"]["Schema"]["signInInputSchema"]
      signUpResponseSchema: {
        success: boolean
      }
      updateAccountByIdInputSchema: {
        email: components["schemas"]["Schema"]["signInInputSchema"]["email"]
      }
      updateAccountByIdResponseSchema: {
        id: components["schemas"]["Schema"]["signInResponseSchema"]["id"]
        email: components["schemas"]["Schema"]["signInInputSchema"]["email"]
      }
      deleteAccountByIdResponseSchema: {
        success: boolean
      }
      getAccountByIdResponseSchema: components["schemas"]["Schema"]["signInResponseSchema"]
      getAccountsQueryString: {
        /** Format: uuid */
        id?: string
        /** Format: email */
        email?: string
      }
      notFoundResponseSchema: {
        message: string
      }
      unAuthorizedResponseSchema: {
        message: string
      }
      successResponseSchema: {
        success: boolean
      }
      uuidSchema: {
        /** Format: uuid */
        id: string
      }
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}

export type external = Record<string, never>

export type operations = Record<string, never>
